<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapper XML 설정 태그 -->

<!-- namespace : 연결할 Mapper 인터페이스 경로 및 이름 -->
<mapper namespace="web.spring.placecloud.persistence.MemberMapper">

    <!-- <resultMap> : DB 쿼리 반환 데이터와 Entity 클래스의 멤버 변수 매핑을 정의하는 태그 - 속성 type 
        : 연결할 클래스 id : SQL 쿼리 정의 태그에서 인식되는 이름 -->
    <!-- <id> : key 컬럼 매핑 태그 <result> : 컬럼 매핑 태그 - 속성 property : Entity 멤버 
        변수 column : DB 테이블 컬럼 -->
    <resultMap type="web.spring.placecloud.domain.MemberVO" id="memberResultMap">
 
      <id property="memberEmail" column="MEMBER_EMAIL" />
      <result property="memberPw" column="MEMBER_PW"/>
      <result property="memberName" column="MEMBER_NAME"/>
      <result property="memberPhone" column="MEMBER_PHONE"/>
      <result property="memberStatus" column="MEMBER_STATUS"/>
      <result property="profileId" column="PROFILE_ID"/>
      <result property="profilePath" column="PROFILE_PATH"/>
      <result property="profileRealName" column="PROFILE_REAL_NAME"/>
      <result property="profileChgName" column="PROFILE_CHG_NAME"/>
      <result property="profileExtension" column="PROFILE_EXTENSION"/>
    </resultMap>

    <resultMap type="web.spring.placecloud.domain.MemberRole" id="roleResultMap">
        <id property="roleId" column="ROLE_ID" />
        <result property="memberEmail" column="MEMBER_EMAIL" />
        <result property="roleName" column="ROLE_NAME" />
    </resultMap>

    <!-- <select>, <insert>, <update>, <delete> : SQL 쿼리 정의 태그 
        속성 id : Mapper 인터페이스 메서드 매핑 역할. 
        resultMap : 쿼리 결과를 resultMap에 매핑. 
        <resultMap> 태그의 id를 적용 
        resultType : 쿼리 결과를 클래스에 매핑 -->

    <insert id="memberJoin">
    	<!-- 회원 등록  -->
    	INSERT INTO MEMBER VALUES (#{memberEmail}, #{memberPw}, #{memberName}, #{memberPhone},
    	 #{memberStatus}, PROFILE_SEQ.NEXTVAL, #{profilePath}, #{profileRealName}, #{profileChgName},
    	 #{profileExtension})
    </insert>

    <insert id="insertMemberRole">
        <!-- 권한 정보 등록 -->
        INSERT INTO MEMBER_ROLE 
        (ROLE_ID, MEMBER_EMAIL) 
        VALUES (ROLE_SEQ.NEXTVAL, #{memberEmail}) 
    </insert>


    <select id="selectRoleByMemberEmail" resultMap="roleResultMap">
        <!-- 권한 정보 조회 -->
        SELECT * FROM MEMBER_ROLE
        WHERE MEMBER_EMAIL = #{memberEmail}
    </select>

 
    <delete id="deleteMemberRole">
        <!-- 권한 정보 삭제 -->
        DELETE FROM MEMBER_ROLE
        WHERE MEMBER_EMAIL = #{memberEmail}
    </delete>
    
    <!--
    	#{변수명} : Mapper 인터페이스 메소드 매개변수와 매핑되어 전송된 데이터를 적용
      -->
      
      <select id="selectMember" resultMap="memberResultMap">
     	 <!--특정 회원 조회  -->
      	SELECT * FROM MEMBER WHERE MEMBER_EMAIL = #{memberEmail}
      </select>
      
      <update id="update">
      	<!-- 특정 회원 수정  -->
      	UPDATE MEMBER SET
      	MEMBER_PW = #{memberPw},
      	MEMBER_NAME = #{memberName},
      	MEMBER_PHONE = #{memberPhone},
      	PROFILE_PATH = #{profilePath},
      	PROFILE_REAL_NAME = #{profileRealName},
      	PROFILE_CHG_NAME = #{profileChgName},
      	PROFILE_EXTENSION = #{profileExtension}
      	WHERE MEMBER_EMAIL = #{memberEmail}
      </update>
      
      <delete id="delete">
      	<!-- 특정 회원 삭제  -->
      	DELETE MEMBER
      	WHERE MEMBER_EMAIL = #{memberEmail}
      </delete>
          
      <select id="emailDoubleChk" resultType="int">
      	<!-- 이메일 중복 체크  -->
      	SELECT COUNT(*) FROM MEMBER WHERE MEMBER_EMAIL = #{memberEmail}
      </select>
      
      <select id="nameDoubleChk" resultType="int">
      	<!-- 닉네임 중복 체크  -->
      	SELECT COUNT(*) FROM MEMBER WHERE MEMBER_NAME = #{memberName}
      </select>
      
      <update id="profilePicture">
      	<!-- 프로필 사진  -->
      	UPDATE MEMBER SET 
      	PROFILE_PICTURE = #{profilePicture}
    	WHERE MEMBER_EMAIL = #{memberEmail}
      </update>
          
</mapper>
